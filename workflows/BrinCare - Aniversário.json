{
  "active": false,
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "buscando aniversariantes do dia",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "buscando aniversariantes do dia": {
      "main": [
        [
          {
            "node": "Item Lists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Item Lists": {
      "main": [
        [
          {
            "node": "buscar pacientes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Nome e telefone para validar": {
      "main": [
        [
          {
            "node": "Formatando Nome e Telefone",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Formatando Nome e Telefone": {
      "main": [
        [
          {
            "node": "Cadastrando na Audiência",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "1 por vez": {
      "main": [
        [
          {
            "node": "Nome e telefone para validar",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cadastrando na Audiência": {
      "main": [
        [
          {
            "node": "enviar fluxo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "enviar fluxo": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "1 por vez",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TEM CELULAR?": {
      "main": [
        [
          {
            "node": "1 por vez",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "1 POR VEZ1": {
      "main": [
        [
          {
            "node": "Nome e telefone para validar1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "enviar fluxo1": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "1 POR VEZ1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "possui telefone?": {
      "main": [
        [
          {
            "node": "Item Lists1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Valores": {
      "main": [
        [
          {
            "node": "possui telefone?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF": {
      "main": [
        [
          {
            "node": "Valores4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "IF1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF1": {
      "main": [
        [
          {
            "node": "Valores5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "IF2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF2": {
      "main": [
        [
          {
            "node": "Valores6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Valores7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Valores4": {
      "main": [
        [
          {
            "node": "Valores",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "buscar pacientes": {
      "main": [
        [
          {
            "node": "IF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Valores5": {
      "main": [
        [
          {
            "node": "Valores",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Valores6": {
      "main": [
        [
          {
            "node": "Valores",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Valores7": {
      "main": [
        [
          {
            "node": "Valores",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "responsavel cadastrado?": {
      "main": [
        [
          {
            "node": "Valores8",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Valores9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Valores8": {
      "main": [
        [
          {
            "node": "1 POR VEZ1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Valores9": {
      "main": [
        [
          {
            "node": "1 POR VEZ1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Salvar nome crianca": {
      "main": [
        [
          {
            "node": "enviar fluxo1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Item Lists1": {
      "main": [
        [
          {
            "node": "responsavel cadastrado?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cadastrando na Audiência1": {
      "main": [
        [
          {
            "node": "Salvar nome crianca",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Nome e telefone para validar1": {
      "main": [
        [
          {
            "node": "Formatando Nome e Telefone1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Formatando Nome e Telefone1": {
      "main": [
        [
          {
            "node": "Cadastrando na Audiência1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2023-09-19T16:33:37.342Z",
  "id": "20",
  "name": "BrinCare - Aniversário",
  "nodes": [
    {
      "parameters": {
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "url": "https://api.feegow.com/v1/api/patient/list",
        "options": {},
        "queryParametersUi": {
          "parameter": [
            {
              "name": "data_aniversario",
              "value": "={{$json.timestamp.slice(5,7) }}-{{  $json.timestamp.slice(8,10) }}"
            }
          ]
        }
      },
      "id": "fd60f306-6c37-46a7-b1db-679f4028e9cc",
      "name": "buscando aniversariantes do dia",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        800,
        460
      ],
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "maxTries": 5,
      "credentials": {
        "httpHeaderAuth": {
          "id": "17",
          "name": "Feegow - BrinCare"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 8
            }
          ]
        }
      },
      "id": "52c7383d-732a-4f4b-a343-6bb60bdc2b9c",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "position": [
        600,
        460
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "content",
        "options": {}
      },
      "id": "9744ed96-3c4e-4c91-a797-449847089ede",
      "name": "Item Lists",
      "type": "n8n-nodes-base.itemLists",
      "typeVersion": 2,
      "position": [
        1020,
        460
      ]
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {}
      },
      "id": "4ce9b2ca-365f-46f4-b26a-def62fe17668",
      "name": "1 por vez",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 2,
      "position": [
        1660,
        60
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "https://backend.botconversa.com.br/api/v1/webhook/subscriber/",
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "phone",
              "value": "={{ $json.whatsapp }}"
            },
            {
              "name": "first_name",
              "value": "={{ $json.Nome }}"
            },
            {
              "name": "last_name",
              "value": "={{ $json.Sobrenome }}"
            }
          ]
        }
      },
      "name": "Cadastrando na Audiência",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        2320,
        40
      ],
      "id": "ff96e01f-a1a3-4675-992e-22a7f37a66d9",
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000,
      "credentials": {
        "httpHeaderAuth": {
          "id": "14",
          "name": "BotConversa Dra Simone"
        }
      }
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "telefone",
              "value": "={{ $json.celular }}"
            },
            {
              "name": "nomeCompleto",
              "value": "={{ $json.nome }}"
            }
          ]
        },
        "options": {}
      },
      "id": "921c02ed-43bf-4ca0-a4f9-308bf5af5595",
      "name": "Nome e telefone para validar",
      "type": "n8n-nodes-base.set",
      "position": [
        1900,
        40
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "// Obter a string de nome completo do nó anterior\nconst nomeCompleto = items[0].json.nomeCompleto;\n\n// Função para separar o nome completo em nome e sobrenome\nfunction separarNomeSobrenome(nomeCompleto) {\n  // Verificar se o nome completo é uma string\n  if (typeof nomeCompleto !== 'string') {\n    throw new Error('O nome completo deve ser uma string.');\n  }\n\n  // Dividir o nome completo em palavras\n  const palavras = nomeCompleto.trim().split(' ');\n\n  // Verificar se há mais de uma palavra\n  if (palavras.length === 0) {\n    throw new Error('O nome completo deve conter pelo menos um nome.');\n  }\n\n  // Extrair o primeiro nome\n  const primeiroNome = palavras.shift();\n\n  // Extrair o sobrenome\n  const sobrenome = palavras.length > 0 ? palavras.join(' ') : '.';\n\n  // Formatar o nome e sobrenome com a primeira letra de cada palavra em maiúscula\n  const nomeFormatado = formatarNome(primeiroNome);\n  const sobrenomeFormatado = formatarNome(sobrenome);\n\n  return {\n    nome: nomeFormatado,\n    sobrenome: sobrenomeFormatado\n  };\n}\n\nfunction formatarNome(nome) {\n  return nome\n    .toLowerCase()\n    .split(' ')\n    .map((palavra) => palavra.charAt(0).toUpperCase() + palavra.slice(1))\n    .join(' ');\n}\n\n// Separar o nome completo em nome e sobrenome\nconst resultado = separarNomeSobrenome(nomeCompleto);\n\nvar whatsapp = items[0].json.telefone.replace(/\\D/g, '');\nvar ddd = whatsapp.slice(2,4);\nvar ddi = whatsapp.charAt(0);\nvar ddx = whatsapp.slice(0,2);\nvar length = whatsapp.length;\nif (length >= 12){\n  if (ddi == '+'){\n    ddi = whatsapp.slice(0,3);\n    whatsapp = parseInt(whatsapp.slice(3)).toString();\n  } else {\n    if (ddx == '55'){\n      whatsapp = parseInt(whatsapp.slice(2)).toString();\n      ddi = \"+55\";\n    } else {\n      whatsapp = parseInt(whatsapp).toString();\n      ddi = 'não informado';\n    }\n  }\n} else {\n  whatsapp = parseInt(whatsapp).toString();\n  ddi = 'não informado';\n}\n\nddd = whatsapp.slice(0,2);\nwhatsapp = whatsapp.slice(2);\nif (ddd > 28){\n  whatsapp = whatsapp.slice(-8);\n} else {\n  whatsapp = '9'+whatsapp.slice(-8);\n}\nvar whatsapp = '+55'+ddd+whatsapp;\n\n// Armazenar o nome e sobrenome nos campos desejados\nreturn {\n  json: {\n    Nome: resultado.nome,\n    Sobrenome: resultado.sobrenome,\n    NomeCompleto: resultado.nome+' '+resultado.sobrenome,\n    whatsapp\n  }\n};\n"
      },
      "id": "bda19d8f-2712-425a-a72e-ee7a92115660",
      "name": "Formatando Nome e Telefone",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        2100,
        40
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://backend.botconversa.com.br/api/v1/webhook/subscriber/{{ $node[\"Cadastrando na Audiência\"].json[\"id\"] }}/send_flow/",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "flow",
              "value": "1648970"
            }
          ]
        },
        "options": {}
      },
      "id": "a5c0f7be-e3d5-4b4b-8e51-36a8d157c531",
      "name": "enviar fluxo",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        2540,
        40
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000,
      "credentials": {
        "httpHeaderAuth": {
          "id": "14",
          "name": "BotConversa Dra Simone"
        }
      }
    },
    {
      "parameters": {
        "amount": 10,
        "unit": "seconds"
      },
      "id": "665ade80-7cbc-4116-ac50-862ac0383d2c",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        2760,
        40
      ],
      "webhookId": "21e131a1-97fe-4db2-93ef-0d7a3ce2003a"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.celular }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "4743cc06-7327-4f16-bc22-77f542584ab8",
      "name": "TEM CELULAR?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1360,
        60
      ]
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {}
      },
      "id": "75db2502-5f99-497a-a636-b096a99e550b",
      "name": "1 POR VEZ1",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 2,
      "position": [
        3360,
        460
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://backend.botconversa.com.br/api/v1/webhook/subscriber/{{ $node[\"Cadastrando na Audiência1\"].json[\"id\"] }}/send_flow/",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "flow",
              "value": "2281148"
            }
          ]
        },
        "options": {}
      },
      "id": "3248b206-1300-4dd8-96fc-9861259bc628",
      "name": "enviar fluxo1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        4460,
        460
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000,
      "credentials": {
        "httpHeaderAuth": {
          "id": "18",
          "name": "ClickBot - BrinCare"
        }
      }
    },
    {
      "parameters": {
        "amount": 5,
        "unit": "seconds"
      },
      "id": "cc32d1f0-3f55-4771-bd6e-43125f8b42fa",
      "name": "Wait1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        4680,
        460
      ],
      "webhookId": "8fa1ccb8-89f1-4d6d-addc-cb4e9198f5cd"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.telefone }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "41476e3f-317c-4660-ab32-7a459f38cabd",
      "name": "possui telefone?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2240,
        460
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "nome",
              "value": "={{$node[\"buscar pacientes\"].json[\"content\"][\"nome\"]}}"
            },
            {
              "name": "Responsavel",
              "value": "={{ $('buscar pacientes').item.json.content.nome_social }}"
            },
            {
              "name": "paciente_id",
              "value": "={{ $('buscar pacientes').item.json.content.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "011bbb14-e59a-4dfb-b9f2-0f7c269631de",
      "name": "Valores",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        2020,
        460
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $('buscar pacientes').item.json.content.celulares[0] }}\n",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "b9188097-1cfd-4fe6-bf08-5036670c75c3",
      "name": "IF",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1480,
        460
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $('buscar pacientes').item.json.content.celulares[1] }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "cf8bb6b7-a6a2-4442-80cd-2b93f5ac4737",
      "name": "IF1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1480,
        680
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $('buscar pacientes').item.json.content.telefones[0] }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "7186bd1e-6099-46ab-ac68-24e89fec5185",
      "name": "IF2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1480,
        900
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "telefone",
              "value": "={{$node[\"buscar pacientes\"].json[\"content\"][\"celulares\"][0]}}"
            }
          ]
        },
        "options": {}
      },
      "id": "0403adba-d180-4bff-94ac-eb306a6c0c38",
      "name": "Valores4",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1720,
        440
      ]
    },
    {
      "parameters": {
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "url": "https://api.feegow.com/v1/api/patient/search",
        "options": {},
        "queryParametersUi": {
          "parameter": [
            {
              "name": "paciente_id",
              "value": "={{ $json[\"patient_id\"] }}"
            }
          ]
        }
      },
      "id": "1579fba4-7a2e-46c8-b9b0-f9949a78cd4e",
      "name": "buscar pacientes",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        1240,
        460
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000,
      "credentials": {
        "httpHeaderAuth": {
          "id": "17",
          "name": "Feegow - BrinCare"
        }
      }
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "telefone",
              "value": "={{$node[\"buscar pacientes\"].json[\"content\"][\"celulares\"][1]}}"
            }
          ]
        },
        "options": {}
      },
      "id": "55412fde-0c92-4e8f-aec7-73ebd1270624",
      "name": "Valores5",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1720,
        600
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "telefone",
              "value": "={{ $('buscar pacientes').item.json.content.telefones[0] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "2c07fa3e-a949-44eb-969a-046131ae27a0",
      "name": "Valores6",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1720,
        760
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "telefone",
              "value": "={{ $('buscar pacientes').item.json.content.telefones[1] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "e8f2d721-e045-4a91-aacd-aaeae98f12b2",
      "name": "Valores7",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1720,
        920
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.appended_Responsavel[0] }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "52e3f264-b00f-4adb-92a4-258abefde0cd",
      "name": "responsavel cadastrado?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2740,
        460
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "nome",
              "value": "={{ $json.appended_Responsavel[0] }}"
            },
            {
              "name": "procedimento",
              "value": "={{ $json.concatenated_procedimento }}"
            },
            {
              "name": "telefone",
              "value": "={{ $json.appended_telefone[0] }}"
            },
            {
              "name": "Nome Crianca",
              "value": "={{ $json.appended_nome[0].toString() }}"
            }
          ]
        },
        "options": {}
      },
      "id": "c8f45bf1-7f82-4092-8668-93ef4968f339",
      "name": "Valores8",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        3020,
        380
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "nome",
              "value": "=Responsável"
            },
            {
              "name": "telefone",
              "value": "={{ $json.appended_telefone[0] }}"
            },
            {
              "name": "Nome Crianca",
              "value": "={{ $json.appended_nome[0].toString() }}"
            }
          ]
        },
        "options": {}
      },
      "id": "6f457b3b-c1c5-4659-a606-50c2e9836cf9",
      "name": "Valores9",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        3020,
        540
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://backend.botconversa.com.br/api/v1/webhook/subscriber/{{ $node[\"Cadastrando na Audiência1\"].json[\"id\"] }}/custom_fields/------/",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "value",
              "value": "={{ $('1 POR VEZ111').item.json[\"Nome Crianca\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "8800ad76-4399-4a7f-b48e-4930c10f62dd",
      "name": "Salvar nome crianca",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        4240,
        460
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000,
      "credentials": {
        "httpHeaderAuth": {
          "id": "18",
          "name": "ClickBot - BrinCare"
        }
      },
      "disabled": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "operation": "summarize",
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "append",
              "field": "telefone"
            },
            {
              "aggregation": "append",
              "field": "nome"
            },
            {
              "aggregation": "append",
              "field": "Responsavel",
              "includeEmpty": true
            }
          ]
        },
        "fieldsToSplitBy": "paciente_id",
        "options": {}
      },
      "id": "6bc1e410-5b40-404d-8e9b-b1a4137d0372",
      "name": "Item Lists1",
      "type": "n8n-nodes-base.itemLists",
      "typeVersion": 2,
      "position": [
        2500,
        460
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "https://backend.botconversa.com.br/api/v1/webhook/subscriber/",
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "phone",
              "value": "={{ $json.whatsapp }}"
            },
            {
              "name": "first_name",
              "value": "={{ $json.Nome }}"
            },
            {
              "name": "last_name",
              "value": "={{ $json.Sobrenome }}"
            }
          ]
        }
      },
      "name": "Cadastrando na Audiência1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        4020,
        460
      ],
      "id": "ea16f498-6fbe-41d7-a0f3-2600f4c51952",
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000,
      "credentials": {
        "httpHeaderAuth": {
          "id": "18",
          "name": "ClickBot - BrinCare"
        }
      }
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "telefone",
              "value": "={{ $json.telefone }}"
            },
            {
              "name": "nomeCompleto",
              "value": "={{ $json.nome }}"
            }
          ]
        },
        "options": {}
      },
      "id": "ca08cc6c-d829-486b-985a-c659cd2a5fd3",
      "name": "Nome e telefone para validar1",
      "type": "n8n-nodes-base.set",
      "position": [
        3600,
        460
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "// Obter a string de nome completo do nó anterior\nconst nomeCompleto = items[0].json.nomeCompleto;\n\n// Função para separar o nome completo em nome e sobrenome\nfunction separarNomeSobrenome(nomeCompleto) {\n  // Verificar se o nome completo é uma string\n  if (typeof nomeCompleto !== 'string') {\n    throw new Error('O nome completo deve ser uma string.');\n  }\n\n  // Dividir o nome completo em palavras\n  const palavras = nomeCompleto.trim().split(' ');\n\n  // Verificar se há mais de uma palavra\n  if (palavras.length === 0) {\n    throw new Error('O nome completo deve conter pelo menos um nome.');\n  }\n\n  // Extrair o primeiro nome\n  const primeiroNome = palavras.shift();\n\n  // Extrair o sobrenome\n  const sobrenome = palavras.length > 0 ? palavras.join(' ') : '.';\n\n  // Formatar o nome e sobrenome com a primeira letra de cada palavra em maiúscula\n  const nomeFormatado = formatarNome(primeiroNome);\n  const sobrenomeFormatado = formatarNome(sobrenome);\n\n  return {\n    nome: nomeFormatado,\n    sobrenome: sobrenomeFormatado\n  };\n}\n\nfunction formatarNome(nome) {\n  return nome\n    .toLowerCase()\n    .split(' ')\n    .map((palavra) => palavra.charAt(0).toUpperCase() + palavra.slice(1))\n    .join(' ');\n}\n\n// Separar o nome completo em nome e sobrenome\nconst resultado = separarNomeSobrenome(nomeCompleto);\n\nvar whatsapp = items[0].json.telefone.replace(/\\D/g, '');\nvar ddd = whatsapp.slice(2,4);\nvar ddi = whatsapp.charAt(0);\nvar ddx = whatsapp.slice(0,2);\nvar length = whatsapp.length;\nif (length >= 12){\n  if (ddi == '+'){\n    ddi = whatsapp.slice(0,3);\n    whatsapp = parseInt(whatsapp.slice(3)).toString();\n  } else {\n    if (ddx == '55'){\n      whatsapp = parseInt(whatsapp.slice(2)).toString();\n      ddi = \"+55\";\n    } else {\n      whatsapp = parseInt(whatsapp).toString();\n      ddi = 'não informado';\n    }\n  }\n} else {\n  whatsapp = parseInt(whatsapp).toString();\n  ddi = 'não informado';\n}\n\nddd = whatsapp.slice(0,2);\nwhatsapp = whatsapp.slice(2);\nif (ddd > 28){\n  whatsapp = whatsapp.slice(-8);\n} else {\n  whatsapp = '9'+whatsapp.slice(-8);\n}\nvar whatsapp = '+55'+ddd+whatsapp;\n\n// Armazenar o nome e sobrenome nos campos desejados\nreturn {\n  json: {\n    Nome: resultado.nome,\n    Sobrenome: resultado.sobrenome,\n    NomeCompleto: resultado.nome+' '+resultado.sobrenome,\n    whatsapp\n  }\n};\n"
      },
      "id": "dc9b6df6-fa14-4e60-ac84-b668ee72e502",
      "name": "Formatando Nome e Telefone1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        3800,
        460
      ]
    }
  ],
  "pinData": {},
  "settings": {
    "saveManualExecutions": false,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "15"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrencyRules": []
    }
  },
  "tags": [
    {
      "createdAt": "2023-09-18T10:45:17.940Z",
      "updatedAt": "2023-09-18T10:45:17.940Z",
      "id": "3",
      "name": "BrinCare"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2023-09-19T16:41:15.000Z",
  "versionId": "0ef72430-0226-4fad-b6ed-624985ff196e"
}